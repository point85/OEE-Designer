-- PostgresQL schema creation script file, schema version 5

/****** Plant Entity table ******/
DROP TABLE IF EXISTS PLANT_ENTITY;

CREATE TABLE PLANT_ENTITY (
	ENT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NULL,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(256) NULL,
	PARENT_KEY bigint NULL,
	HIER_LEVEL varchar(16) NULL,
	RETENTION bigint NULL,
    CONSTRAINT PK_ENT_KEY PRIMARY KEY(ENT_KEY)
);
CREATE UNIQUE INDEX IDX_ENT_NAME ON PLANT_ENTITY (NAME);

/****** Reason table ******/
DROP TABLE IF EXISTS REASON;

CREATE TABLE REASON (
	REASON_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NULL,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	PARENT_KEY bigint NULL,
	LOSS varchar(32) NULL,
    CONSTRAINT PK_REASON_KEY PRIMARY KEY(REASON_KEY)
);
CREATE UNIQUE INDEX IDX_REASON_NAME ON REASON (NAME);

/****** Material table ******/
DROP TABLE IF EXISTS MATERIAL;

CREATE TABLE MATERIAL (
	MAT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NULL,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	CATEGORY varchar(32) NULL,
    CONSTRAINT PK_MAT_KEY PRIMARY KEY(MAT_KEY)
);
CREATE UNIQUE INDEX IDX_MATL_NAME ON MATERIAL (NAME);

/****** Equipment Material table ******/
DROP TABLE IF EXISTS EQUIPMENT_MATERIAL;

CREATE TABLE EQUIPMENT_MATERIAL (
	EM_KEY bigint GENERATED ALWAYS AS IDENTITY,
	MAT_KEY bigint NULL,
	EQ_KEY bigint NULL,
	OEE_TARGET float NULL,
	RUN_AMOUNT float NULL,
	RUN_UOM_KEY bigint NULL,
	REJECT_UOM_KEY bigint NULL,
	IS_DEFAULT boolean NOT NULL,
    CONSTRAINT PK_EM_KEY PRIMARY KEY(EM_KEY)
);

/****** Data Source table ******/
DROP TABLE IF EXISTS DATA_SOURCE;

CREATE TABLE DATA_SOURCE (
	SOURCE_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NOT NULL,
	NAME varchar(64) NOT NULL,
	DESCRIPTION varchar(128) NULL,
	TYPE varchar(16) NOT NULL,
	HOST varchar(128) NULL,
	USER_NAME varchar(64) NULL,
	PASSWORD varchar(64) NULL,
	PORT int NULL,
	END_PATH varchar(128) NULL,
	SEC_POLICY varchar(64) NULL,
	MSG_MODE varchar(64) NULL,
	KEYSTORE varchar(128) NULL,
	KEYSTORE_PWD varchar(64) NULL,
	CONSTRAINT PK_SRC_KEY PRIMARY KEY(SOURCE_KEY)
);
CREATE UNIQUE INDEX IDX_SOURCE_NAME ON DATA_SOURCE (NAME);

/****** Event Resolver table ******/ 
DROP TABLE IF EXISTS EVENT_RESOLVER;

CREATE TABLE EVENT_RESOLVER (
	ER_KEY bigint GENERATED ALWAYS AS IDENTITY,
	ENT_KEY bigint NULL,
	SOURCE_ID varchar(128) NULL,
	SCRIPT varchar(4000) NULL,
	SOURCE_KEY bigint NULL,
	PERIOD int NULL,
	ER_TYPE varchar(16) NULL,
	DATA_TYPE varchar(32) NULL,
	COLLECT_KEY bigint NULL,
	CONSTRAINT PK_ER_KEY PRIMARY KEY(ER_KEY)
);
CREATE UNIQUE INDEX IDX_ER_SOURCE_ID ON EVENT_RESOLVER (SOURCE_ID);

/****** Unit of Measure table ******/
DROP TABLE IF EXISTS UOM; 

CREATE TABLE UOM (
	UOM_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NOT NULL,
	NAME varchar(64) NULL,
	SYMBOL varchar(16) NOT NULL,
	DESCRIPTION varchar(512) NULL,
	CATEGORY varchar(64) NULL,
	UNIT_TYPE varchar(32) NULL,
	UNIT varchar(32) NULL,
	CONV_FACTOR float NULL,
	CONV_UOM_KEY bigint NULL,
	CONV_OFFSET float NULL,
	BRIDGE_FACTOR float NULL,
	BRIDGE_UOM_KEY bigint NULL,
	BRIDGE_OFFSET float NULL,
	UOM1_KEY bigint NULL,
	EXP1 int NULL,
	UOM2_KEY bigint NULL,
	EXP2 int NULL,
	CONSTRAINT PK_UOM_KEY PRIMARY KEY(UOM_KEY)
);
CREATE UNIQUE INDEX IDX_UOM_SYMBOL ON UOM (SYMBOL);

/****** WORK_SCHEDULE table ******/
DROP TABLE IF EXISTS WORK_SCHEDULE;

CREATE TABLE WORK_SCHEDULE (
	WS_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NULL,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(512) NULL,
	CONSTRAINT PK_WS_KEY PRIMARY KEY(WS_KEY)
);
CREATE UNIQUE INDEX IDX_SCHED_NAME ON WORK_SCHEDULE (NAME);

/****** SHIFT table ******/
DROP TABLE IF EXISTS SHIFT;

CREATE TABLE SHIFT (
	SHIFT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	START_TIME time(3) NULL,
	DURATION bigint NULL,
	WS_KEY bigint NULL,
	CONSTRAINT PK_SHIFT_KEY PRIMARY KEY(SHIFT_KEY)
);
CREATE UNIQUE INDEX IDX_SHIFT_NAME_WS ON SHIFT (NAME, WS_KEY);

/****** TEAM table ******/
DROP TABLE IF EXISTS TEAM;

CREATE TABLE TEAM (
	TEAM_KEY bigint GENERATED ALWAYS AS IDENTITY,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	WS_KEY bigint NULL,
	ROTATION_KEY bigint NULL,
	ROTATION_START date NULL,
	CONSTRAINT PK_TEAM_KEY PRIMARY KEY(TEAM_KEY)
);
CREATE UNIQUE INDEX IDX_TEAM_NAME_WS ON TEAM (NAME, WS_KEY);

/****** ROTATION table ******/
DROP TABLE IF EXISTS ROTATION;

CREATE TABLE ROTATION (
	ROTATION_KEY bigint GENERATED ALWAYS AS IDENTITY,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	WS_KEY bigint NULL,
	CONSTRAINT PK_ROT_KEY PRIMARY KEY(ROTATION_KEY)
);

/****** ROTATION_SEGMENT table ******/
DROP TABLE IF EXISTS ROTATION_SEGMENT;

CREATE TABLE ROTATION_SEGMENT (
	SEGMENT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	ROTATION_KEY bigint NULL,
	SEQUENCE smallint NULL,
	SHIFT_KEY bigint NULL,
	DAYS_ON smallint NULL,
	DAYS_OFF smallint NULL,
	CONSTRAINT PK_SEGMENT_KEY PRIMARY KEY(SEGMENT_KEY)
);

/****** NON_WORKING_PERIOD table ******/
DROP TABLE IF EXISTS NON_WORKING_PERIOD;

CREATE TABLE NON_WORKING_PERIOD (
	PERIOD_KEY bigint GENERATED ALWAYS AS IDENTITY,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	START_DATE_TIME timestamp(3) NULL,
	DURATION bigint NULL,
	WS_KEY bigint NULL,
	LOSS varchar(32) NULL,
	CONSTRAINT PK_PERIOD_KEY PRIMARY KEY(PERIOD_KEY)
);

/****** BREAK_PERIOD table ******/
DROP TABLE IF EXISTS BREAK_PERIOD;

CREATE TABLE BREAK_PERIOD (
	BREAK_KEY bigint GENERATED ALWAYS AS IDENTITY,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	START_TIME time(3) NULL,
	DURATION bigint NULL,
	SHIFT_KEY bigint NULL,
	LOSS varchar(32) NULL,
	CONSTRAINT PK_BREAK_KEY PRIMARY KEY(BREAK_KEY)
);

/****** COLLECTOR table ******/
DROP TABLE IF EXISTS COLLECTOR;

CREATE TABLE COLLECTOR (
	COLLECT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	VERSION int NULL,
	NAME varchar(64) NULL,
	DESCRIPTION varchar(128) NULL,
	STATE varchar(16) NULL,
	HOST varchar(64) NULL,
	BROKER_TYPE varchar(16) NULL,
	BROKER_HOST varchar(64) NULL,
	BROKER_PORT int NULL,
	BROKER_USER varchar(64) NULL,
	BROKER_PWD varchar(64) NULL,
	SOURCE_KEY bigint NULL,
	CONSTRAINT PK_COLLECT_KEY PRIMARY KEY(COLLECT_KEY)
);
CREATE UNIQUE INDEX IDX_COLLECT_NAME ON COLLECTOR (NAME);

/****** OEE_EVENT table ******/
DROP TABLE IF EXISTS OEE_EVENT;

CREATE TABLE OEE_EVENT (
	EVENT_KEY bigint GENERATED ALWAYS AS IDENTITY,
	ENT_KEY bigint NOT NULL,
	START_TIME timestamp(3) NOT NULL,
	START_TIME_OFFSET int NOT NULL,
	END_TIME timestamp(3) NULL,
	END_TIME_OFFSET int NULL,
	SHIFT_KEY bigint NULL,
	TEAM_KEY bigint NULL,
	REASON_KEY bigint NULL,
	DURATION bigint NULL,
	EVENT_TYPE varchar(16) NOT NULL,
	AMOUNT float NULL,
	UOM_KEY bigint NULL,
	MATL_KEY bigint NULL,
	JOB varchar(64) NULL,
	IN_VALUE varchar(64) NULL,
	SOURCE_ID varchar(64) NULL,
	COLLECTOR varchar(64) NULL,
	CONSTRAINT PK_EVENT_KEY PRIMARY KEY(EVENT_KEY)
);
CREATE UNIQUE INDEX IDX_EVT_ENT_TYPE_START ON OEE_EVENT (ENT_KEY, EVENT_TYPE, START_TIME);

/****** Entity Schedule table ******/
DROP TABLE IF EXISTS ENTITY_SCHEDULE;

CREATE TABLE ENTITY_SCHEDULE (
	ES_KEY bigint GENERATED ALWAYS AS IDENTITY,
	WS_KEY bigint NULL,
	ENT_KEY bigint NULL,
	START_DATE_TIME timestamp(3) NOT NULL,
	END_DATE_TIME timestamp(3) NOT NULL,
    CONSTRAINT PK_ES_KEY PRIMARY KEY(ES_KEY)
);
